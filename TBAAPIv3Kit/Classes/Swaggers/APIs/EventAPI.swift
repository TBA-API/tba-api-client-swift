//
// EventAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire

extension TBAAPIv3KitAPI {


open class EventAPI {
    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEvents(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Event]?,_ error: Error?) -> Void)) {
        getDistrictEventsWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /district/{district_key}/events
     - Gets a list of events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
} ]}]
     
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Event]> 
     */
    open class func getDistrictEventsWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Event]> {
        var path = "/district/{district_key}/events"
        path = path.replacingOccurrences(of: "{district_key}", with: "\(districtKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Event]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEventsKeys(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getDistrictEventsKeysWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /district/{district_key}/events/keys
     - Gets a list of event keys for events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    open class func getDistrictEventsKeysWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/district/{district_key}/events/keys"
        path = path.replacingOccurrences(of: "{district_key}", with: "\(districtKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEventsSimple(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [EventSimple]?,_ error: Error?) -> Void)) {
        getDistrictEventsSimpleWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /district/{district_key}/events/simple
     - Gets a short-form list of events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
} ]}]
     
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[EventSimple]> 
     */
    open class func getDistrictEventsSimpleWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[EventSimple]> {
        var path = "/district/{district_key}/events/simple"
        path = path.replacingOccurrences(of: "{district_key}", with: "\(districtKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[EventSimple]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEvent(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: Event?,_ error: Error?) -> Void)) {
        getEventWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}
     - Gets an Event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
}}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<Event> 
     */
    open class func getEventWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<Event> {
        var path = "/event/{event_key}"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Event>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventAlliances(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [EliminationAlliance]?,_ error: Error?) -> Void)) {
        getEventAlliancesWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/alliances
     - Gets a list of Elimination Alliances for the given Event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "declines" : [ "declines", "declines" ],
  "backup" : {
    "in" : "in",
    "out" : "out"
  },
  "name" : "name",
  "picks" : [ "picks", "picks" ],
  "status" : {
    "playoff_average" : 0.8008281904610115,
    "level" : "level",
    "record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "current_level_record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "status" : "status"
  }
}, {
  "declines" : [ "declines", "declines" ],
  "backup" : {
    "in" : "in",
    "out" : "out"
  },
  "name" : "name",
  "picks" : [ "picks", "picks" ],
  "status" : {
    "playoff_average" : 0.8008281904610115,
    "level" : "level",
    "record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "current_level_record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "status" : "status"
  }
} ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[EliminationAlliance]> 
     */
    open class func getEventAlliancesWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[EliminationAlliance]> {
        var path = "/event/{event_key}/alliances"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[EliminationAlliance]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventAwards(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Award]?,_ error: Error?) -> Void)) {
        getEventAwardsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/awards
     - Gets a list of awards from the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
}, {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
} ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Award]> 
     */
    open class func getEventAwardsWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Award]> {
        var path = "/event/{event_key}/awards"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Award]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventDistrictPoints(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: EventDistrictPoints?,_ error: Error?) -> Void)) {
        getEventDistrictPointsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/district_points
     - Gets a list of team rankings for the Event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "tiebreakers" : {
    "key" : {
      "highest_qual_scores" : [ 2, 2 ],
      "qual_wins" : 7
    }
  },
  "points" : {
    "key" : {
      "total" : 5,
      "alliance_points" : 0,
      "elim_points" : 5,
      "award_points" : 6,
      "qual_points" : 1
    }
  }
}}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<EventDistrictPoints> 
     */
    open class func getEventDistrictPointsWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<EventDistrictPoints> {
        var path = "/event/{event_key}/district_points"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<EventDistrictPoints>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventInsights(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: EventInsights?,_ error: Error?) -> Void)) {
        getEventInsightsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/insights
     - Gets a set of Event-specific insights for the given Event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "qual" : "{}",
  "playoff" : "{}"
}}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<EventInsights> 
     */
    open class func getEventInsightsWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<EventInsights> {
        var path = "/event/{event_key}/insights"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<EventInsights>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventMatchTimeseries(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getEventMatchTimeseriesWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/matches/timeseries
     - Gets an array of Match Keys for the given event key that have timeseries data. Returns an empty array if no matches have timeseries data. *WARNING:* This is *not* official data, and is subject to a significant possibility of error, or missing data. Do not rely on this data for any purpose. In fact, pretend we made it up. *WARNING:* This endpoint and corresponding data models are under *active development* and may change at any time, including in breaking ways.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    open class func getEventMatchTimeseriesWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/event/{event_key}/matches/timeseries"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventMatches(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Match]?,_ error: Error?) -> Void)) {
        getEventMatchesWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/matches
     - Gets a list of matches for the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
}, {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
} ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Match]> 
     */
    open class func getEventMatchesWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Match]> {
        var path = "/event/{event_key}/matches"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Match]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventMatchesKeys(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getEventMatchesKeysWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/matches/keys
     - Gets a list of match keys for the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    open class func getEventMatchesKeysWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/event/{event_key}/matches/keys"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventMatchesSimple(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [MatchSimple]?,_ error: Error?) -> Void)) {
        getEventMatchesSimpleWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/matches/simple
     - Gets a short-form list of matches for the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "predicted_time" : 5,
  "set_number" : 0,
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "winning_alliance" : "red",
  "time" : 1,
  "actual_time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key",
  "match_number" : 6
}, {
  "predicted_time" : 5,
  "set_number" : 0,
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "winning_alliance" : "red",
  "time" : 1,
  "actual_time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key",
  "match_number" : 6
} ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[MatchSimple]> 
     */
    open class func getEventMatchesSimpleWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[MatchSimple]> {
        var path = "/event/{event_key}/matches/simple"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[MatchSimple]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventOPRs(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: EventOPRs?,_ error: Error?) -> Void)) {
        getEventOPRsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/oprs
     - Gets a set of Event OPRs (including OPR, DPR, and CCWM) for the given Event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "dprs" : {
    "key" : 6.0274563
  },
  "oprs" : {
    "key" : 0.8008282
  },
  "ccwms" : {
    "key" : 1.4658129
  }
}}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<EventOPRs> 
     */
    open class func getEventOPRsWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<EventOPRs> {
        var path = "/event/{event_key}/oprs"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<EventOPRs>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventPredictions(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: EventPredictions?,_ error: Error?) -> Void)) {
        getEventPredictionsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/predictions
     - Gets information on TBA-generated predictions for the given Event. Contains year-specific information. *WARNING* This endpoint is currently under development and may change at any time.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={ }}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<EventPredictions> 
     */
    open class func getEventPredictionsWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<EventPredictions> {
        var path = "/event/{event_key}/predictions"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<EventPredictions>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventRankings(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: EventRanking?,_ error: Error?) -> Void)) {
        getEventRankingsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/rankings
     - Gets a list of team rankings for the Event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "rankings" : [ {
    "matches_played" : 6,
    "qual_average" : 1,
    "extra_stats" : [ 5.63737665663332876420099637471139430999755859375, 5.63737665663332876420099637471139430999755859375 ],
    "sort_orders" : [ 2.3021358869347654518833223846741020679473876953125, 2.3021358869347654518833223846741020679473876953125 ],
    "record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "rank" : 5,
    "dq" : 0,
    "team_key" : "team_key"
  }, {
    "matches_played" : 6,
    "qual_average" : 1,
    "extra_stats" : [ 5.63737665663332876420099637471139430999755859375, 5.63737665663332876420099637471139430999755859375 ],
    "sort_orders" : [ 2.3021358869347654518833223846741020679473876953125, 2.3021358869347654518833223846741020679473876953125 ],
    "record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "rank" : 5,
    "dq" : 0,
    "team_key" : "team_key"
  } ],
  "sort_order_info" : [ {
    "precision" : 9,
    "name" : "name"
  }, {
    "precision" : 9,
    "name" : "name"
  } ],
  "extra_stats_info" : [ {
    "precision" : 7.061401241503109105224211816675961017608642578125,
    "name" : "name"
  }, {
    "precision" : 7.061401241503109105224211816675961017608642578125,
    "name" : "name"
  } ]
}}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<EventRanking> 
     */
    open class func getEventRankingsWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<EventRanking> {
        var path = "/event/{event_key}/rankings"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<EventRanking>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventSimple(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: EventSimple?,_ error: Error?) -> Void)) {
        getEventSimpleWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/simple
     - Gets a short-form Event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
}}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<EventSimple> 
     */
    open class func getEventSimpleWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<EventSimple> {
        var path = "/event/{event_key}/simple"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<EventSimple>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventTeams(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Team]?,_ error: Error?) -> Void)) {
        getEventTeamsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/teams
     - Gets a list of `Team` objects that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
}, {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
} ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Team]> 
     */
    open class func getEventTeamsWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/event/{event_key}/teams"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Team]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventTeamsKeys(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getEventTeamsKeysWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/teams/keys
     - Gets a list of `Team` keys that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    open class func getEventTeamsKeysWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/event/{event_key}/teams/keys"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventTeamsSimple(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [TeamSimple]?,_ error: Error?) -> Void)) {
        getEventTeamsSimpleWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/teams/simple
     - Gets a short-form list of `Team` objects that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
}, {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
} ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[TeamSimple]> 
     */
    open class func getEventTeamsSimpleWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/event/{event_key}/teams/simple"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventTeamsStatuses(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String:TeamEventStatus]?,_ error: Error?) -> Void)) {
        getEventTeamsStatusesWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /event/{event_key}/teams/statuses
     - Gets a key-value list of the event statuses for teams competing at the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "key" : {
    "playoff_status_str" : "playoff_status_str",
    "alliance" : {
      "number" : 4,
      "backup" : {
        "in" : "in",
        "out" : "out"
      },
      "pick" : 7,
      "name" : "name"
    },
    "last_match_key" : "last_match_key",
    "alliance_status_str" : "alliance_status_str",
    "qual" : {
      "sort_order_info" : [ {
        "precision" : 2,
        "name" : "name"
      }, {
        "precision" : 2,
        "name" : "name"
      } ],
      "ranking" : {
        "matches_played" : 1,
        "qual_average" : 5.962133916683182,
        "sort_orders" : [ 3.61607674925191080461672754609026014804840087890625, 3.61607674925191080461672754609026014804840087890625 ],
        "record" : {
          "wins" : 7,
          "ties" : 9,
          "losses" : 2
        },
        "rank" : 5,
        "dq" : 6,
        "team_key" : "team_key"
      },
      "num_teams" : 0,
      "status" : "status"
    },
    "overall_status_str" : "overall_status_str",
    "next_match_key" : "next_match_key",
    "playoff" : {
      "playoff_average" : 1,
      "level" : "qm",
      "record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "current_level_record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "status" : "won"
    }
  }
}}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String:TeamEventStatus]> 
     */
    open class func getEventTeamsStatusesWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String:TeamEventStatus]> {
        var path = "/event/{event_key}/teams/statuses"
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String:TeamEventStatus]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventsByYear(year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Event]?,_ error: Error?) -> Void)) {
        getEventsByYearWithRequestBuilder(year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /events/{year}
     - Gets a list of events in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
} ]}]
     
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Event]> 
     */
    open class func getEventsByYearWithRequestBuilder(year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[Event]> {
        var path = "/events/{year}"
        path = path.replacingOccurrences(of: "{year}", with: "\(year)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Event]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventsByYearKeys(year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getEventsByYearKeysWithRequestBuilder(year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /events/{year}/keys
     - Gets a list of event keys in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    open class func getEventsByYearKeysWithRequestBuilder(year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/events/{year}/keys"
        path = path.replacingOccurrences(of: "{year}", with: "\(year)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventsByYearSimple(year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [EventSimple]?,_ error: Error?) -> Void)) {
        getEventsByYearSimpleWithRequestBuilder(year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /events/{year}/simple
     - Gets a short-form list of events in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
} ]}]
     
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[EventSimple]> 
     */
    open class func getEventsByYearSimpleWithRequestBuilder(year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[EventSimple]> {
        var path = "/events/{year}/simple"
        path = path.replacingOccurrences(of: "{year}", with: "\(year)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[EventSimple]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventAwards(teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Award]?,_ error: Error?) -> Void)) {
        getTeamEventAwardsWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/event/{event_key}/awards
     - Gets a list of awards the given team won at the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
}, {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Award]> 
     */
    open class func getTeamEventAwardsWithRequestBuilder(teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Award]> {
        var path = "/team/{team_key}/event/{event_key}/awards"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Award]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventMatches(teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Match]?,_ error: Error?) -> Void)) {
        getTeamEventMatchesWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/event/{event_key}/matches
     - Gets a list of matches for the given team and event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
}, {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Match]> 
     */
    open class func getTeamEventMatchesWithRequestBuilder(teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Match]> {
        var path = "/team/{team_key}/event/{event_key}/matches"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Match]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventMatchesKeys(teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getTeamEventMatchesKeysWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/event/{event_key}/matches/keys
     - Gets a list of match keys for matches for the given team and event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    open class func getTeamEventMatchesKeysWithRequestBuilder(teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/team/{team_key}/event/{event_key}/matches/keys"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventMatchesSimple(teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Match]?,_ error: Error?) -> Void)) {
        getTeamEventMatchesSimpleWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/event/{event_key}/matches/simple
     - Gets a short-form list of matches for the given team and event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
}, {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Match]> 
     */
    open class func getTeamEventMatchesSimpleWithRequestBuilder(teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Match]> {
        var path = "/team/{team_key}/event/{event_key}/matches/simple"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Match]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventStatus(teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: TeamEventStatus?,_ error: Error?) -> Void)) {
        getTeamEventStatusWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/event/{event_key}/status
     - Gets the competition rank and status of the team at the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "playoff_status_str" : "playoff_status_str",
  "alliance" : {
    "number" : 4,
    "backup" : {
      "in" : "in",
      "out" : "out"
    },
    "pick" : 7,
    "name" : "name"
  },
  "last_match_key" : "last_match_key",
  "alliance_status_str" : "alliance_status_str",
  "qual" : {
    "sort_order_info" : [ {
      "precision" : 2,
      "name" : "name"
    }, {
      "precision" : 2,
      "name" : "name"
    } ],
    "ranking" : {
      "matches_played" : 1,
      "qual_average" : 5.962133916683182,
      "sort_orders" : [ 3.61607674925191080461672754609026014804840087890625, 3.61607674925191080461672754609026014804840087890625 ],
      "record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "rank" : 5,
      "dq" : 6,
      "team_key" : "team_key"
    },
    "num_teams" : 0,
    "status" : "status"
  },
  "overall_status_str" : "overall_status_str",
  "next_match_key" : "next_match_key",
  "playoff" : {
    "playoff_average" : 1,
    "level" : "qm",
    "record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "current_level_record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "status" : "won"
  }
}}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<TeamEventStatus> 
     */
    open class func getTeamEventStatusWithRequestBuilder(teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<TeamEventStatus> {
        var path = "/team/{team_key}/event/{event_key}/status"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{event_key}", with: "\(eventKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<TeamEventStatus>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEvents(teamKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Event]?,_ error: Error?) -> Void)) {
        getTeamEventsWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/events
     - Gets a list of all events this team has competed at.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Event]> 
     */
    open class func getTeamEventsWithRequestBuilder(teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Event]> {
        var path = "/team/{team_key}/events"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Event]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventsByYear(teamKey: String, year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Event]?,_ error: Error?) -> Void)) {
        getTeamEventsByYearWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/events/{year}
     - Gets a list of events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Event]> 
     */
    open class func getTeamEventsByYearWithRequestBuilder(teamKey: String, year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[Event]> {
        var path = "/team/{team_key}/events/{year}"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{year}", with: "\(year)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Event]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventsByYearKeys(teamKey: String, year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getTeamEventsByYearKeysWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/events/{year}/keys
     - Gets a list of the event keys for events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    open class func getTeamEventsByYearKeysWithRequestBuilder(teamKey: String, year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/team/{team_key}/events/{year}/keys"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{year}", with: "\(year)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventsByYearSimple(teamKey: String, year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [EventSimple]?,_ error: Error?) -> Void)) {
        getTeamEventsByYearSimpleWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/events/{year}/simple
     - Gets a short-form list of events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[EventSimple]> 
     */
    open class func getTeamEventsByYearSimpleWithRequestBuilder(teamKey: String, year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[EventSimple]> {
        var path = "/team/{team_key}/events/{year}/simple"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{year}", with: "\(year)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[EventSimple]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventsKeys(teamKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getTeamEventsKeysWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/events/keys
     - Gets a list of the event keys for all events this team has competed at.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    open class func getTeamEventsKeysWithRequestBuilder(teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/team/{team_key}/events/keys"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventsSimple(teamKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [EventSimple]?,_ error: Error?) -> Void)) {
        getTeamEventsSimpleWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/events/simple
     - Gets a short-form list of all events this team has competed at.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[EventSimple]> 
     */
    open class func getTeamEventsSimpleWithRequestBuilder(teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[EventSimple]> {
        var path = "/team/{team_key}/events/simple"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[EventSimple]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventsStatusesByYear(teamKey: String, year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String:TeamEventStatus]?,_ error: Error?) -> Void)) {
        getTeamEventsStatusesByYearWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /team/{team_key}/events/{year}/statuses
     - Gets a key-value list of the event statuses for events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "key" : {
    "playoff_status_str" : "playoff_status_str",
    "alliance" : {
      "number" : 4,
      "backup" : {
        "in" : "in",
        "out" : "out"
      },
      "pick" : 7,
      "name" : "name"
    },
    "last_match_key" : "last_match_key",
    "alliance_status_str" : "alliance_status_str",
    "qual" : {
      "sort_order_info" : [ {
        "precision" : 2,
        "name" : "name"
      }, {
        "precision" : 2,
        "name" : "name"
      } ],
      "ranking" : {
        "matches_played" : 1,
        "qual_average" : 5.962133916683182,
        "sort_orders" : [ 3.61607674925191080461672754609026014804840087890625, 3.61607674925191080461672754609026014804840087890625 ],
        "record" : {
          "wins" : 7,
          "ties" : 9,
          "losses" : 2
        },
        "rank" : 5,
        "dq" : 6,
        "team_key" : "team_key"
      },
      "num_teams" : 0,
      "status" : "status"
    },
    "overall_status_str" : "overall_status_str",
    "next_match_key" : "next_match_key",
    "playoff" : {
      "playoff_average" : 1,
      "level" : "qm",
      "record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "current_level_record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "status" : "won"
    }
  }
}}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String:TeamEventStatus]> 
     */
    open class func getTeamEventsStatusesByYearWithRequestBuilder(teamKey: String, year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[String:TeamEventStatus]> {
        var path = "/team/{team_key}/events/{year}/statuses"
        path = path.replacingOccurrences(of: "{team_key}", with: "\(teamKey)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{year}", with: "\(year)", options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String:TeamEventStatus]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
}
