//
// TeamEventStatusPlayoff.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Playoff status for this team, may be null if the team did not make playoffs, or playoffs have not begun. */
open class TeamEventStatusPlayoff: JSONEncodable {

    public enum Level: String { 
        case qm = "qm"
        case ef = "ef"
        case qf = "qf"
        case sf = "sf"
        case f = "f"
    }
    public enum Status: String { 
        case won = "won"
        case eliminated = "eliminated"
        case playing = "playing"
    }
    /** The highest playoff level the team reached. */
    public var level: Level?
    public var currentLevelRecord: WLTRecord?
    public var record: WLTRecord?
    /** Current competition status for the playoffs. */
    public var status: Status?
    /** The average match score during playoffs. Year specific. May be null if not relevant for a given year. */
    public var playoffAverage: Int32?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["level"] = self.level?.rawValue
        nillableDictionary["current_level_record"] = self.currentLevelRecord?.encodeToJSON()
        nillableDictionary["record"] = self.record?.encodeToJSON()
        nillableDictionary["status"] = self.status?.rawValue
        nillableDictionary["playoff_average"] = self.playoffAverage?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}

