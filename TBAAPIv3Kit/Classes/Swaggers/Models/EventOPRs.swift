//
// EventOPRs.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** OPR, DPR, and CCWM for teams at the event. */

open class EventOPRs: Codable {

    /** A key-value pair with team key (eg &#x60;frc254&#x60;) as key and OPR as value. */
    public var oprs: [String:Float]?
    /** A key-value pair with team key (eg &#x60;frc254&#x60;) as key and DPR as value. */
    public var dprs: [String:Float]?
    /** A key-value pair with team key (eg &#x60;frc254&#x60;) as key and CCWM as value. */
    public var ccwms: [String:Float]?


    
    public init(oprs: [String:Float]?, dprs: [String:Float]?, ccwms: [String:Float]?) {
        self.oprs = oprs
        self.dprs = dprs
        self.ccwms = ccwms
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(oprs, forKey: "oprs")
        try container.encodeIfPresent(dprs, forKey: "dprs")
        try container.encodeIfPresent(ccwms, forKey: "ccwms")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        oprs = try container.decodeIfPresent([String:Float].self, forKey: "oprs")
        dprs = try container.decodeIfPresent([String:Float].self, forKey: "dprs")
        ccwms = try container.decodeIfPresent([String:Float].self, forKey: "ccwms")
    }
}

