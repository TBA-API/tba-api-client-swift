//
// EventRankingRankings.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class EventRankingRankings: JSONEncodable {
    /** Number of times disqualified. */
    public var dq: Int32
    /** Number of matches played by this team. */
    public var matchesPlayed: Int32
    /** The average match score during qualifications. Year specific. May be null if not relevant for a given year. */
    public var qualAverage: Int32?
    /** The team&#39;s rank at the event as provided by FIRST. */
    public var rank: Int32
    public var record: WLTRecord
    /** Additional special data on the team&#39;s performance calculated by TBA. */
    public var extraStats: [Double]?
    /** Additional year-specific information, may be null. See parent &#x60;sort_order_info&#x60; for details. */
    public var sortOrders: [Double]?
    /** The team with this rank. */
    public var teamKey: String

    public init(dq: Int32, matchesPlayed: Int32, qualAverage: Int32?=nil, rank: Int32, record: WLTRecord, extraStats: [Double]?=nil, sortOrders: [Double]?=nil, teamKey: String) {
        self.dq = dq
        self.matchesPlayed = matchesPlayed
        self.qualAverage = qualAverage
        self.rank = rank
        self.record = record
        self.extraStats = extraStats
        self.sortOrders = sortOrders
        self.teamKey = teamKey
    }

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["dq"] = self.dq.encodeToJSON()
        nillableDictionary["matches_played"] = self.matchesPlayed.encodeToJSON()
        nillableDictionary["qual_average"] = self.qualAverage?.encodeToJSON()
        nillableDictionary["rank"] = self.rank.encodeToJSON()
        nillableDictionary["record"] = self.record.encodeToJSON()
        nillableDictionary["extra_stats"] = self.extraStats?.encodeToJSON()
        nillableDictionary["sort_orders"] = self.sortOrders?.encodeToJSON()
        nillableDictionary["team_key"] = self.teamKey
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
