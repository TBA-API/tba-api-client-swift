//
// DistrictAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire

extension TBAAPIv3KitAPI {


open class DistrictAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEvents(completion: @escaping ((_ data: [Event]?,_ error: Error?) -> Void)) {
        getDistrictEventsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/events
     - Gets a list of events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<[Event]> 
     */
    open class func getDistrictEventsWithRequestBuilder() -> RequestBuilder<[Event]> {
        let path = "/district/{district_key}/events"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Event]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEventsKeys(completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getDistrictEventsKeysWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/events/keys
     - Gets a list of event keys for events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<[String]> 
     */
    open class func getDistrictEventsKeysWithRequestBuilder() -> RequestBuilder<[String]> {
        let path = "/district/{district_key}/events/keys"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEventsSimple(districtKey: String, completion: @escaping ((_ data: [EventSimple]?,_ error: Error?) -> Void)) {
        getDistrictEventsSimpleWithRequestBuilder(districtKey: districtKey).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/events/simple
     - Gets a short-form list of events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - returns: RequestBuilder<[EventSimple]> 
     */
    open class func getDistrictEventsSimpleWithRequestBuilder(districtKey: String) -> RequestBuilder<[EventSimple]> {
        var path = "/district/{district_key}/events/simple"
        let districtKeyPreEscape = "\(APIHelper.mapValueToPathItem(districtKey))"
        let districtKeyPostEscape = districtKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{district_key}", with: districtKeyPostEscape, options: .literal, range: nil)
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[EventSimple]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictRankings(completion: @escaping ((_ data: [DistrictRanking]?,_ error: Error?) -> Void)) {
        getDistrictRankingsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/rankings
     - Gets a list of team district rankings for the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<[DistrictRanking]> 
     */
    open class func getDistrictRankingsWithRequestBuilder() -> RequestBuilder<[DistrictRanking]> {
        let path = "/district/{district_key}/rankings"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[DistrictRanking]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictTeams(completion: @escaping ((_ data: [Team]?,_ error: Error?) -> Void)) {
        getDistrictTeamsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/teams
     - Gets a list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<[Team]> 
     */
    open class func getDistrictTeamsWithRequestBuilder() -> RequestBuilder<[Team]> {
        let path = "/district/{district_key}/teams"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Team]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictTeamsKeys(completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getDistrictTeamsKeysWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/teams/keys
     - Gets a list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<[String]> 
     */
    open class func getDistrictTeamsKeysWithRequestBuilder() -> RequestBuilder<[String]> {
        let path = "/district/{district_key}/teams/keys"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[String]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictTeamsSimple(completion: @escaping ((_ data: [TeamSimple]?,_ error: Error?) -> Void)) {
        getDistrictTeamsSimpleWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/teams/simple
     - Gets a short-form list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<[TeamSimple]> 
     */
    open class func getDistrictTeamsSimpleWithRequestBuilder() -> RequestBuilder<[TeamSimple]> {
        let path = "/district/{district_key}/teams/simple"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictsByYear(completion: @escaping ((_ data: [DistrictList]?,_ error: Error?) -> Void)) {
        getDistrictsByYearWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /districts/{year}
     - Gets a list of districts and their corresponding district key, for the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<[DistrictList]> 
     */
    open class func getDistrictsByYearWithRequestBuilder() -> RequestBuilder<[DistrictList]> {
        let path = "/districts/{year}"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[DistrictList]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventDistrictPoints(completion: @escaping ((_ data: EventDistrictPoints?,_ error: Error?) -> Void)) {
        getEventDistrictPointsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /event/{event_key}/district_points
     - Gets a list of team rankings for the Event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<EventDistrictPoints> 
     */
    open class func getEventDistrictPointsWithRequestBuilder() -> RequestBuilder<EventDistrictPoints> {
        let path = "/event/{event_key}/district_points"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EventDistrictPoints>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamDistricts(completion: @escaping ((_ data: [DistrictList]?,_ error: Error?) -> Void)) {
        getTeamDistrictsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /team/{team_key}/districts
     - Gets an array of districts representing each year the team was in a district. Will return an empty array if the team was never in a district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - returns: RequestBuilder<[DistrictList]> 
     */
    open class func getTeamDistrictsWithRequestBuilder() -> RequestBuilder<[DistrictList]> {
        let path = "/team/{team_key}/districts"
        let URLString = TBAAPIv3KitAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[DistrictList]>.Type = TBAAPIv3KitAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
}
