//
// TeamAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension tba-api-v3-clientAPI {


public class TeamAPI: APIBase {
    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDistrictRankings(districtKey districtKey: String, ifModifiedSince: String? = nil, completion: ((data: [DistrictRanking]?, error: ErrorType?) -> Void)) {
        getDistrictRankingsWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /district/{districtKey}/rankings
     - Gets a list of team district rankings for the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "rookie_bonus" : 6,
  "rank" : 0,
  "point_total" : 1,
  "team_key" : "team_key",
  "event_points" : [ {
    "district_cmp" : true,
    "total" : 9,
    "alliance_points" : 5,
    "elim_points" : 7,
    "award_points" : 5,
    "event_key" : "event_key",
    "qual_points" : 2
  }, {
    "district_cmp" : true,
    "total" : 9,
    "alliance_points" : 5,
    "elim_points" : 7,
    "award_points" : 5,
    "event_key" : "event_key",
    "qual_points" : 2
  } ]
}, {
  "rookie_bonus" : 6,
  "rank" : 0,
  "point_total" : 1,
  "team_key" : "team_key",
  "event_points" : [ {
    "district_cmp" : true,
    "total" : 9,
    "alliance_points" : 5,
    "elim_points" : 7,
    "award_points" : 5,
    "event_key" : "event_key",
    "qual_points" : 2
  }, {
    "district_cmp" : true,
    "total" : 9,
    "alliance_points" : 5,
    "elim_points" : 7,
    "award_points" : 5,
    "event_key" : "event_key",
    "qual_points" : 2
  } ]
} ]}]
     
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[DistrictRanking]> 
     */
    public class func getDistrictRankingsWithRequestBuilder(districtKey districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[DistrictRanking]> {
        var path = "/district/{districtKey}/rankings"
        path = path.stringByReplacingOccurrencesOfString("{district_key}", withString: "\(districtKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[DistrictRanking]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDistrictTeams(districtKey districtKey: String, ifModifiedSince: String? = nil, completion: ((data: [Team]?, error: ErrorType?) -> Void)) {
        getDistrictTeamsWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /district/{districtKey}/teams
     - Gets a list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
}, {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
} ]}]
     
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Team]> 
     */
    public class func getDistrictTeamsWithRequestBuilder(districtKey districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/district/{districtKey}/teams"
        path = path.stringByReplacingOccurrencesOfString("{district_key}", withString: "\(districtKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Team]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDistrictTeamsKeys(districtKey districtKey: String, ifModifiedSince: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getDistrictTeamsKeysWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /district/{districtKey}/teams/keys
     - Gets a list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getDistrictTeamsKeysWithRequestBuilder(districtKey districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/district/{districtKey}/teams/keys"
        path = path.stringByReplacingOccurrencesOfString("{district_key}", withString: "\(districtKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDistrictTeamsSimple(districtKey districtKey: String, ifModifiedSince: String? = nil, completion: ((data: [TeamSimple]?, error: ErrorType?) -> Void)) {
        getDistrictTeamsSimpleWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /district/{districtKey}/teams/simple
     - Gets a short-form list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
}, {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
} ]}]
     
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[TeamSimple]> 
     */
    public class func getDistrictTeamsSimpleWithRequestBuilder(districtKey districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/district/{districtKey}/teams/simple"
        path = path.stringByReplacingOccurrencesOfString("{district_key}", withString: "\(districtKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEventTeams(eventKey eventKey: String, ifModifiedSince: String? = nil, completion: ((data: [Team]?, error: ErrorType?) -> Void)) {
        getEventTeamsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /event/{eventKey}/teams
     - Gets a list of `Team` objects that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
}, {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
} ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Team]> 
     */
    public class func getEventTeamsWithRequestBuilder(eventKey eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/event/{eventKey}/teams"
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Team]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEventTeamsKeys(eventKey eventKey: String, ifModifiedSince: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getEventTeamsKeysWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /event/{eventKey}/teams/keys
     - Gets a list of `Team` keys that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getEventTeamsKeysWithRequestBuilder(eventKey eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/event/{eventKey}/teams/keys"
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEventTeamsSimple(eventKey eventKey: String, ifModifiedSince: String? = nil, completion: ((data: [TeamSimple]?, error: ErrorType?) -> Void)) {
        getEventTeamsSimpleWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /event/{eventKey}/teams/simple
     - Gets a short-form list of `Team` objects that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
}, {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
} ]}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[TeamSimple]> 
     */
    public class func getEventTeamsSimpleWithRequestBuilder(eventKey eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/event/{eventKey}/teams/simple"
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEventTeamsStatuses(eventKey eventKey: String, ifModifiedSince: String? = nil, completion: ((data: [String:TeamEventStatus]?, error: ErrorType?) -> Void)) {
        getEventTeamsStatusesWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /event/{eventKey}/teams/statuses
     - Gets a key-value list of the event statuses for teams competing at the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "key" : {
    "playoff_status_str" : "playoff_status_str",
    "alliance" : {
      "number" : 4,
      "backup" : {
        "in" : "in",
        "out" : "out"
      },
      "pick" : 7,
      "name" : "name"
    },
    "last_match_key" : "last_match_key",
    "alliance_status_str" : "alliance_status_str",
    "qual" : {
      "sort_order_info" : [ {
        "precision" : 2,
        "name" : "name"
      }, {
        "precision" : 2,
        "name" : "name"
      } ],
      "ranking" : {
        "matches_played" : 1,
        "qual_average" : 5.962133916683182,
        "sort_orders" : [ 3.61607674925191080461672754609026014804840087890625, 3.61607674925191080461672754609026014804840087890625 ],
        "record" : {
          "wins" : 7,
          "ties" : 9,
          "losses" : 2
        },
        "rank" : 5,
        "dq" : 6,
        "team_key" : "team_key"
      },
      "num_teams" : 0,
      "status" : "status"
    },
    "overall_status_str" : "overall_status_str",
    "next_match_key" : "next_match_key",
    "playoff" : {
      "playoff_average" : 1,
      "level" : "qm",
      "record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "current_level_record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "status" : "won"
    }
  }
}}]
     
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String:TeamEventStatus]> 
     */
    public class func getEventTeamsStatusesWithRequestBuilder(eventKey eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String:TeamEventStatus]> {
        var path = "/event/{eventKey}/teams/statuses"
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String:TeamEventStatus]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeam(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: Team?, error: ErrorType?) -> Void)) {
        getTeamWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}
     - Gets a `Team` object for the team referenced by the given key.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
}}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<Team> 
     */
    public class func getTeamWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<Team> {
        var path = "/team/{teamKey}"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<Team>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamAwards(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: [Award]?, error: ErrorType?) -> Void)) {
        getTeamAwardsWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/awards
     - Gets a list of awards the given team has won.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
}, {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Award]> 
     */
    public class func getTeamAwardsWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Award]> {
        var path = "/team/{teamKey}/awards"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Award]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamAwardsByYear(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [Award]?, error: ErrorType?) -> Void)) {
        getTeamAwardsByYearWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/awards/{year}
     - Gets a list of awards the given team has won in a given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
}, {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Award]> 
     */
    public class func getTeamAwardsByYearWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[Award]> {
        var path = "/team/{teamKey}/awards/{year}"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Award]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamDistricts(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: [DistrictList]?, error: ErrorType?) -> Void)) {
        getTeamDistrictsWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/districts
     - Gets an array of districts representing each year the team was in a district. Will return an empty array if the team was never in a district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "year" : 0,
  "abbreviation" : "abbreviation",
  "display_name" : "display_name",
  "key" : "key"
}, {
  "year" : 0,
  "abbreviation" : "abbreviation",
  "display_name" : "display_name",
  "key" : "key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[DistrictList]> 
     */
    public class func getTeamDistrictsWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[DistrictList]> {
        var path = "/team/{teamKey}/districts"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[DistrictList]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventAwards(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: ((data: [Award]?, error: ErrorType?) -> Void)) {
        getTeamEventAwardsWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/event/{eventKey}/awards
     - Gets a list of awards the given team won at the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
}, {
  "year" : 6,
  "name" : "name",
  "recipient_list" : [ {
    "awardee" : "awardee",
    "team_key" : "team_key"
  }, {
    "awardee" : "awardee",
    "team_key" : "team_key"
  } ],
  "award_type" : 0,
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Award]> 
     */
    public class func getTeamEventAwardsWithRequestBuilder(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Award]> {
        var path = "/team/{teamKey}/event/{eventKey}/awards"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Award]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventMatches(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: ((data: [Match]?, error: ErrorType?) -> Void)) {
        getTeamEventMatchesWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/event/{eventKey}/matches
     - Gets a list of matches for the given team and event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
}, {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Match]> 
     */
    public class func getTeamEventMatchesWithRequestBuilder(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Match]> {
        var path = "/team/{teamKey}/event/{eventKey}/matches"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Match]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventMatchesKeys(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getTeamEventMatchesKeysWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/event/{eventKey}/matches/keys
     - Gets a list of match keys for matches for the given team and event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getTeamEventMatchesKeysWithRequestBuilder(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/team/{teamKey}/event/{eventKey}/matches/keys"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventMatchesSimple(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: ((data: [Match]?, error: ErrorType?) -> Void)) {
        getTeamEventMatchesSimpleWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/event/{eventKey}/matches/simple
     - Gets a short-form list of matches for the given team and event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
}, {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Match]> 
     */
    public class func getTeamEventMatchesSimpleWithRequestBuilder(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Match]> {
        var path = "/team/{teamKey}/event/{eventKey}/matches/simple"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Match]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventStatus(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil, completion: ((data: TeamEventStatus?, error: ErrorType?) -> Void)) {
        getTeamEventStatusWithRequestBuilder(teamKey: teamKey, eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/event/{eventKey}/status
     - Gets the competition rank and status of the team at the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "playoff_status_str" : "playoff_status_str",
  "alliance" : {
    "number" : 4,
    "backup" : {
      "in" : "in",
      "out" : "out"
    },
    "pick" : 7,
    "name" : "name"
  },
  "last_match_key" : "last_match_key",
  "alliance_status_str" : "alliance_status_str",
  "qual" : {
    "sort_order_info" : [ {
      "precision" : 2,
      "name" : "name"
    }, {
      "precision" : 2,
      "name" : "name"
    } ],
    "ranking" : {
      "matches_played" : 1,
      "qual_average" : 5.962133916683182,
      "sort_orders" : [ 3.61607674925191080461672754609026014804840087890625, 3.61607674925191080461672754609026014804840087890625 ],
      "record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "rank" : 5,
      "dq" : 6,
      "team_key" : "team_key"
    },
    "num_teams" : 0,
    "status" : "status"
  },
  "overall_status_str" : "overall_status_str",
  "next_match_key" : "next_match_key",
  "playoff" : {
    "playoff_average" : 1,
    "level" : "qm",
    "record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "current_level_record" : {
      "wins" : 7,
      "ties" : 9,
      "losses" : 2
    },
    "status" : "won"
  }
}}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<TeamEventStatus> 
     */
    public class func getTeamEventStatusWithRequestBuilder(teamKey teamKey: String, eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<TeamEventStatus> {
        var path = "/team/{teamKey}/event/{eventKey}/status"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{event_key}", withString: "\(eventKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<TeamEventStatus>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEvents(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: [Event]?, error: ErrorType?) -> Void)) {
        getTeamEventsWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/events
     - Gets a list of all events this team has competed at.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Event]> 
     */
    public class func getTeamEventsWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Event]> {
        var path = "/team/{teamKey}/events"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Event]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventsByYear(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [Event]?, error: ErrorType?) -> Void)) {
        getTeamEventsByYearWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/events/{year}
     - Gets a list of events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "week" : 1,
  "playoff_type" : 2,
  "city" : "city",
  "year" : 6,
  "timezone" : "timezone",
  "event_type" : 0,
  "event_code" : "event_code",
  "playoff_type_string" : "playoff_type_string",
  "event_type_string" : "event_type_string",
  "webcasts" : [ {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  }, {
    "file" : "file",
    "channel" : "channel",
    "type" : "youtube"
  } ],
  "key" : "key",
  "lat" : 5.962133916683182,
  "start_date" : "2000-01-23",
  "first_event_code" : "first_event_code",
  "parent_event_key" : "parent_event_key",
  "website" : "website",
  "division_keys" : [ "division_keys", "division_keys" ],
  "address" : "address",
  "lng" : 5.637376656633329,
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "short_name" : "short_name",
  "first_event_id" : "first_event_id",
  "postal_code" : "postal_code"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Event]> 
     */
    public class func getTeamEventsByYearWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[Event]> {
        var path = "/team/{teamKey}/events/{year}"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Event]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventsByYearKeys(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getTeamEventsByYearKeysWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/events/{year}/keys
     - Gets a list of the event keys for events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getTeamEventsByYearKeysWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/team/{teamKey}/events/{year}/keys"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventsByYearSimple(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [EventSimple]?, error: ErrorType?) -> Void)) {
        getTeamEventsByYearSimpleWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/events/{year}/simple
     - Gets a short-form list of events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[EventSimple]> 
     */
    public class func getTeamEventsByYearSimpleWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[EventSimple]> {
        var path = "/team/{teamKey}/events/{year}/simple"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[EventSimple]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventsKeys(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getTeamEventsKeysWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/events/keys
     - Gets a list of the event keys for all events this team has competed at.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getTeamEventsKeysWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/team/{teamKey}/events/keys"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventsSimple(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: [EventSimple]?, error: ErrorType?) -> Void)) {
        getTeamEventsSimpleWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/events/simple
     - Gets a short-form list of all events this team has competed at.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
}, {
  "end_date" : "2000-01-23",
  "country" : "country",
  "event_type" : 0,
  "city" : "city",
  "year" : 6,
  "event_code" : "event_code",
  "district" : {
    "year" : 0,
    "abbreviation" : "abbreviation",
    "display_name" : "display_name",
    "key" : "key"
  },
  "name" : "name",
  "state_prov" : "state_prov",
  "key" : "key",
  "start_date" : "2000-01-23"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[EventSimple]> 
     */
    public class func getTeamEventsSimpleWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[EventSimple]> {
        var path = "/team/{teamKey}/events/simple"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[EventSimple]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamEventsStatusesByYear(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [String:TeamEventStatus]?, error: ErrorType?) -> Void)) {
        getTeamEventsStatusesByYearWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/events/{year}/statuses
     - Gets a key-value list of the event statuses for events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "key" : {
    "playoff_status_str" : "playoff_status_str",
    "alliance" : {
      "number" : 4,
      "backup" : {
        "in" : "in",
        "out" : "out"
      },
      "pick" : 7,
      "name" : "name"
    },
    "last_match_key" : "last_match_key",
    "alliance_status_str" : "alliance_status_str",
    "qual" : {
      "sort_order_info" : [ {
        "precision" : 2,
        "name" : "name"
      }, {
        "precision" : 2,
        "name" : "name"
      } ],
      "ranking" : {
        "matches_played" : 1,
        "qual_average" : 5.962133916683182,
        "sort_orders" : [ 3.61607674925191080461672754609026014804840087890625, 3.61607674925191080461672754609026014804840087890625 ],
        "record" : {
          "wins" : 7,
          "ties" : 9,
          "losses" : 2
        },
        "rank" : 5,
        "dq" : 6,
        "team_key" : "team_key"
      },
      "num_teams" : 0,
      "status" : "status"
    },
    "overall_status_str" : "overall_status_str",
    "next_match_key" : "next_match_key",
    "playoff" : {
      "playoff_average" : 1,
      "level" : "qm",
      "record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "current_level_record" : {
        "wins" : 7,
        "ties" : 9,
        "losses" : 2
      },
      "status" : "won"
    }
  }
}}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String:TeamEventStatus]> 
     */
    public class func getTeamEventsStatusesByYearWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[String:TeamEventStatus]> {
        var path = "/team/{teamKey}/events/{year}/statuses"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String:TeamEventStatus]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamMatchesByYear(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [Match]?, error: ErrorType?) -> Void)) {
        getTeamMatchesByYearWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/matches/{year}
     - Gets a list of matches for the given team and year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
}, {
  "predicted_time" : 2,
  "set_number" : 0,
  "videos" : [ {
    "type" : "type",
    "key" : "key"
  }, {
    "type" : "type",
    "key" : "key"
  } ],
  "winning_alliance" : "winning_alliance",
  "actual_time" : 5,
  "post_result_time" : 7,
  "match_number" : 6,
  "score_breakdown" : "{}",
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Match]> 
     */
    public class func getTeamMatchesByYearWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[Match]> {
        var path = "/team/{teamKey}/matches/{year}"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Match]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamMatchesByYearKeys(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getTeamMatchesByYearKeysWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/matches/{year}/keys
     - Gets a list of match keys for matches for the given team and year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getTeamMatchesByYearKeysWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/team/{teamKey}/matches/{year}/keys"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamMatchesByYearSimple(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [MatchSimple]?, error: ErrorType?) -> Void)) {
        getTeamMatchesByYearSimpleWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/matches/{year}/simple
     - Gets a short-form list of matches for the given team and year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "predicted_time" : 5,
  "set_number" : 0,
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "winning_alliance" : "red",
  "time" : 1,
  "actual_time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key",
  "match_number" : 6
}, {
  "predicted_time" : 5,
  "set_number" : 0,
  "alliances" : {
    "red" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    },
    "blue" : {
      "score" : 1,
      "team_keys" : [ "team_keys", "team_keys" ],
      "surrogate_team_keys" : [ "surrogate_team_keys", "surrogate_team_keys" ],
      "dq_team_keys" : [ "dq_team_keys", "dq_team_keys" ]
    }
  },
  "winning_alliance" : "red",
  "time" : 1,
  "actual_time" : 5,
  "key" : "key",
  "comp_level" : "qm",
  "event_key" : "event_key",
  "match_number" : 6
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[MatchSimple]> 
     */
    public class func getTeamMatchesByYearSimpleWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[MatchSimple]> {
        var path = "/team/{teamKey}/matches/{year}/simple"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[MatchSimple]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter mediaTag: (path) Media Tag which describes the Media. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamMediaByTag(teamKey teamKey: String, mediaTag: String, ifModifiedSince: String? = nil, completion: ((data: [Media]?, error: ErrorType?) -> Void)) {
        getTeamMediaByTagWithRequestBuilder(teamKey: teamKey, mediaTag: mediaTag, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/media/tag/{mediaTag}
     - Gets a list of Media (videos / pictures) for the given team and tag.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "foreign_key" : "foreign_key",
  "details" : "{}",
  "type" : "youtube",
  "key" : "key",
  "preferred" : true
}, {
  "foreign_key" : "foreign_key",
  "details" : "{}",
  "type" : "youtube",
  "key" : "key",
  "preferred" : true
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter mediaTag: (path) Media Tag which describes the Media. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Media]> 
     */
    public class func getTeamMediaByTagWithRequestBuilder(teamKey teamKey: String, mediaTag: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Media]> {
        var path = "/team/{teamKey}/media/tag/{mediaTag}"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{media_tag}", withString: "\(mediaTag)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Media]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter mediaTag: (path) Media Tag which describes the Media. 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamMediaByTagYear(teamKey teamKey: String, mediaTag: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [Media]?, error: ErrorType?) -> Void)) {
        getTeamMediaByTagYearWithRequestBuilder(teamKey: teamKey, mediaTag: mediaTag, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/media/tag/{mediaTag}/{year}
     - Gets a list of Media (videos / pictures) for the given team, tag and year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "foreign_key" : "foreign_key",
  "details" : "{}",
  "type" : "youtube",
  "key" : "key",
  "preferred" : true
}, {
  "foreign_key" : "foreign_key",
  "details" : "{}",
  "type" : "youtube",
  "key" : "key",
  "preferred" : true
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter mediaTag: (path) Media Tag which describes the Media. 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Media]> 
     */
    public class func getTeamMediaByTagYearWithRequestBuilder(teamKey teamKey: String, mediaTag: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[Media]> {
        var path = "/team/{teamKey}/media/tag/{mediaTag}/{year}"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{media_tag}", withString: "\(mediaTag)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Media]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamMediaByYear(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil, completion: ((data: [Media]?, error: ErrorType?) -> Void)) {
        getTeamMediaByYearWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/media/{year}
     - Gets a list of Media (videos / pictures) for the given team and year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "foreign_key" : "foreign_key",
  "details" : "{}",
  "type" : "youtube",
  "key" : "key",
  "preferred" : true
}, {
  "foreign_key" : "foreign_key",
  "details" : "{}",
  "type" : "youtube",
  "key" : "key",
  "preferred" : true
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Media]> 
     */
    public class func getTeamMediaByYearWithRequestBuilder(teamKey teamKey: String, year: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[Media]> {
        var path = "/team/{teamKey}/media/{year}"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Media]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamRobots(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: [TeamRobot]?, error: ErrorType?) -> Void)) {
        getTeamRobotsWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/robots
     - Gets a list of year and robot name pairs for each year that a robot name was provided. Will return an empty array if the team has never named a robot.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "year" : 0,
  "robot_name" : "robot_name",
  "team_key" : "team_key",
  "key" : "key"
}, {
  "year" : 0,
  "robot_name" : "robot_name",
  "team_key" : "team_key",
  "key" : "key"
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[TeamRobot]> 
     */
    public class func getTeamRobotsWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamRobot]> {
        var path = "/team/{teamKey}/robots"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[TeamRobot]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamSimple(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: TeamSimple?, error: ErrorType?) -> Void)) {
        getTeamSimpleWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/simple
     - Gets a `Team_Simple` object for the team referenced by the given key.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example={
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
}}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<TeamSimple> 
     */
    public class func getTeamSimpleWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<TeamSimple> {
        var path = "/team/{teamKey}/simple"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<TeamSimple>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamSocialMedia(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: [Media]?, error: ErrorType?) -> Void)) {
        getTeamSocialMediaWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/social_media
     - Gets a list of Media (social media) for the given team.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "foreign_key" : "foreign_key",
  "details" : "{}",
  "type" : "youtube",
  "key" : "key",
  "preferred" : true
}, {
  "foreign_key" : "foreign_key",
  "details" : "{}",
  "type" : "youtube",
  "key" : "key",
  "preferred" : true
} ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Media]> 
     */
    public class func getTeamSocialMediaWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Media]> {
        var path = "/team/{teamKey}/social_media"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Media]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamYearsParticipated(teamKey teamKey: String, ifModifiedSince: String? = nil, completion: ((data: [Int32]?, error: ErrorType?) -> Void)) {
        getTeamYearsParticipatedWithRequestBuilder(teamKey: teamKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /team/{teamKey}/years_participated
     - Gets a list of years in which the team participated in at least one competition.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ 0, 0 ]}]
     
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Int32]> 
     */
    public class func getTeamYearsParticipatedWithRequestBuilder(teamKey teamKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Int32]> {
        var path = "/team/{teamKey}/years_participated"
        path = path.stringByReplacingOccurrencesOfString("{team_key}", withString: "\(teamKey)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Int32]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeams(pageNum pageNum: Int32, ifModifiedSince: String? = nil, completion: ((data: [Team]?, error: ErrorType?) -> Void)) {
        getTeamsWithRequestBuilder(pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /teams/{pageNum}
     - Gets a list of `Team` objects, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
}, {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
} ]}]
     
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Team]> 
     */
    public class func getTeamsWithRequestBuilder(pageNum pageNum: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/teams/{pageNum}"
        path = path.stringByReplacingOccurrencesOfString("{page_num}", withString: "\(pageNum)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Team]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamsByYear(year year: Int32, pageNum: Int32, ifModifiedSince: String? = nil, completion: ((data: [Team]?, error: ErrorType?) -> Void)) {
        getTeamsByYearWithRequestBuilder(year: year, pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /teams/{year}/{pageNum}
     - Gets a list of `Team` objects that competed in the given year, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
}, {
  "country" : "country",
  "website" : "http://example.com/aeiou",
  "address" : "address",
  "lng" : 1.4658129805029452,
  "city" : "city",
  "home_championship" : "{}",
  "gmaps_place_id" : "gmaps_place_id",
  "gmaps_url" : "http://example.com/aeiou",
  "location_name" : "location_name",
  "rookie_year" : 5,
  "nickname" : "nickname",
  "name" : "name",
  "motto" : "motto",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "postal_code" : "postal_code",
  "key" : "key",
  "lat" : 6.027456183070403
} ]}]
     
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[Team]> 
     */
    public class func getTeamsByYearWithRequestBuilder(year year: Int32, pageNum: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/teams/{year}/{pageNum}"
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{page_num}", withString: "\(pageNum)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[Team]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamsByYearKeys(year year: Int32, pageNum: Int32, ifModifiedSince: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getTeamsByYearKeysWithRequestBuilder(year: year, pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /teams/{year}/{pageNum}/keys
     - Gets a list Team Keys that competed in the given year, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getTeamsByYearKeysWithRequestBuilder(year year: Int32, pageNum: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/teams/{year}/{pageNum}/keys"
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{page_num}", withString: "\(pageNum)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamsByYearSimple(year year: Int32, pageNum: Int32, ifModifiedSince: String? = nil, completion: ((data: [TeamSimple]?, error: ErrorType?) -> Void)) {
        getTeamsByYearSimpleWithRequestBuilder(year: year, pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /teams/{year}/{pageNum}/simple
     - Gets a list of short form `Team_Simple` objects that competed in the given year, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
}, {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
} ]}]
     
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[TeamSimple]> 
     */
    public class func getTeamsByYearSimpleWithRequestBuilder(year year: Int32, pageNum: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/teams/{year}/{pageNum}/simple"
        path = path.stringByReplacingOccurrencesOfString("{year}", withString: "\(year)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{page_num}", withString: "\(pageNum)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamsKeys(pageNum pageNum: Int32, ifModifiedSince: String? = nil, completion: ((data: [String]?, error: ErrorType?) -> Void)) {
        getTeamsKeysWithRequestBuilder(pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /teams/{pageNum}/keys
     - Gets a list of Team keys, paginated in groups of 500. (Note, each page will not have 500 teams, but will include the teams within that range of 500.)
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[String]> 
     */
    public class func getTeamsKeysWithRequestBuilder(pageNum pageNum: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/teams/{pageNum}/keys"
        path = path.stringByReplacingOccurrencesOfString("{page_num}", withString: "\(pageNum)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getTeamsSimple(pageNum pageNum: Int32, ifModifiedSince: String? = nil, completion: ((data: [TeamSimple]?, error: ErrorType?) -> Void)) {
        getTeamsSimpleWithRequestBuilder(pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /teams/{pageNum}/simple
     - Gets a list of short form `Team_Simple` objects, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - responseHeaders: [Last-Modified(String), Cache-Control(String)]
     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
}, {
  "country" : "country",
  "city" : "city",
  "nickname" : "nickname",
  "name" : "name",
  "team_number" : 0,
  "state_prov" : "state_prov",
  "key" : "key"
} ]}]
     
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)

     - returns: RequestBuilder<[TeamSimple]> 
     */
    public class func getTeamsSimpleWithRequestBuilder(pageNum pageNum: Int32, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/teams/{pageNum}/simple"
        path = path.stringByReplacingOccurrencesOfString("{page_num}", withString: "\(pageNum)", options: .LiteralSearch, range: nil)
        let URLString = tba-api-v3-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = tba-api-v3-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

}
}
